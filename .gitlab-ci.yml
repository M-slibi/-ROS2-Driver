image: ros:foxy-ros1-bridge-focal
# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

stages:
  - Build
  - Deploy
  - Test

before_script:
  # install package dependencies
  - apt update && apt install libboost-all-dev -y
  - source /opt/ros/foxy/setup.bash

# deploy pages only on master branch
pages:
  stage: Deploy
  script:
    # Install python dependencies
    - apt install python3-pip doxygen -y
    - pip3 install sphinx sphinx_rtd_theme breathe
    # Create documentation dir and move to build dir
    - mkdir public
    - mkdir docs/build
    - cd docs/build
    - cmake ../
    - make
    - mv ../sphinx/* ../../public
  artifacts:
    paths:
    - public
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'

# check that package can be compiled
compile:
  stage: Build
  script:
   - mkdir -p src/oxts
   - mv oxts*/ tests/ src/oxts   
   - ls
   - touch src/oxts/tests/COLCON_IGNORE
   - colcon build
  artifacts:
    paths:
      - build/
      - install/
#- touch src/oxts/tests/COLCON_IGNORE
# Build
#build:
#  stage: Build
#  script:
#    - echo "Building"
#    - make
# temp:
#   stage: Build
#   script:
#     - . /opt/ros/foxy/setup.bash # "." and "source" are interchangeable (unix)
#     - mkdir -p ros_ws/src
#     - cd ros_ws/src
#     - git clone https://github.com/OxfordTechnicalSolutions/oxts_ros2_driver
#     - cd oxts_ros2_driver#/oxts
#     - rosdep update
#     - rosdep install --from-path .
#     - cd ..#/..
#     - colcon build
#     - . install/setup.sh

test:
  stage: Test
  script:
    -ls
    - echo "Running unit tests"
    - ./build/tests/tests

    #./install/tests/lib/tests/tests
    #- cd tests
    #- ./tests.cpp
    #- test -f "build/info.txt"
