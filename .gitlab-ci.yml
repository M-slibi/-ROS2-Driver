image: osrf/ros:galactic-desktop
#osrf/ros:foxy-ros1-bridge

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

stages:
  - Build
  - Test
  - Deploy

before_script:
  # install package dependencies
  - apt update && apt install libboost-all-dev -y
  - apt-get install ros-galactic-fastrtps
  - apt-get install cmake
  - source /opt/ros/galactic/setup.bash
  # Install python for pip3 installs
  - apt install python3-pip doxygen -y
  - pip3 install anybadge
# deploy pages only on master branch
pages:
  stage: Deploy
  script:
    # Install python dependencies
    #- apt install python3-pip doxygen -y
    - pip3 install sphinx sphinx_rtd_theme breathe
    # Create documentation dir and move to build dir
    #- mkdir public
    - mkdir docs/build
    - cd docs/build
    - cmake ../
    - make
    - mv ../sphinx/* ../../public
  artifacts:
    paths:
    - public
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'

# check that package can be compiled
compile:
  stage: Build
  script:
    - "echo Building ROS2 Driver"
    - ls
    - mkdir -p src/oxts
    - mv oxts*/ src/oxts
    - mv tests/ src/oxts/test
    - pwd
    - colcon build
    - source install/setup.sh
    # SVG generation
    - mkdir public
    - anybadge --label=build --value=passing --file=build.svg passing=green failing=red
    - mv build.svg public/
    #build_$CI_COMMIT_REF_NAME.svg
    # assign SVG image
  artifacts:
    paths:
      - build/
      - install/
      - public/build.svg
      
# run unit tests
test:
  stage: Test
  script:
    - echo "Running unit tests" 
    - ls
    - ls build/tests
    - source /opt/ros/galactic/setup.bash
    - source install/setup.sh
    - cd ./build/tests
    - ./tests
    - anybadge --label=test --value=passing --file=test.svg passing=green failing=red
    - mv test.svg public/
  artifacts:
    paths:
      - public/test.svg
