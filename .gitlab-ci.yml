image: osrf/ros:foxy-desktop
  #osrf/ros:foxy-ros1-bridge
#osrf/ros:foxy-desktop
#osrf/ros:foxy-desktop
#ros:foxy-ros-base-focal
#orocos/ros2
#image: ros:foxy-ros1-bridge-focal
# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

stages:
  - Build
  - Deploy
  - Test


before_script:
  # install package dependencies
  - apt update && apt install libboost-all-dev -y
  - apt-get install cmake
  - source /opt/ros/foxy/setup.bash

# deploy pages only on master branch
pages:
  stage: Deploy
  script:
    # Install python dependencies
    - apt install python3-pip doxygen -y
    - pip3 install sphinx sphinx_rtd_theme breathe
    # Create documentation dir and move to build dir
    - mkdir public
    - mkdir docs/build
    - cd docs/build
    - cmake ../
    - make
    - mv ../sphinx/* ../../public
  artifacts:
    paths:
    - public
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'

# check that package can be compiled
compile:
  stage: Build
  script:
    # Get RMV fastrtps
    # - echo "getting fastrtps"
    # - git clone "https://github.com/ros2/rosidl_typesupport_fastrtps.git"
    # - cd rosidl_typesupport_fastrtps/fastrtps_cmake_module && mkdir _build && cd _build 
    # - cmake .. && cmake --build . --target install
    # - cd ../../..
    - "echo Building ROS2 Driver"
    - ls
    - mkdir -p src/oxts
    - mv oxts*/ src/oxts
    - mv tests/ src/oxts/test
    - pwd
    - ls
    - ls src/oxts
    - colcon build
    - ls
    - ls install/share
    - ls build/tests
  artifacts:
    paths:
      - build/
      - install/
# mv oxts*/ tests/ src/oxts 
#- touch src/oxts/tests/COLCON_IGNORE
    # Get testing tools:
    # - echo "getting tools"
    # - git clone "https://github.com/osrf/osrf_testing_tools_cpp.git"
    # - cd osrf_testing_tools_cpp/osrf_testing_tools_cpp && mkdir _build && cd _build 
    # - cmake .. && cmake --build . --target install
    # - cd ../../..
    # # Get rosidl_typesupport_fastrtps_cpp package
    # - echo "getting rosid1_typesupport_fastrtps_cpp package"
    # - git clone "https://github.com/ros2/rosidl_typesupport_fastrtps.git"
    # - cd rosidl_typesupport_fastrtps/rosidl_typesupport_fastrtps_cpp && mkdir _build && cd _build 
    # - cmake .. && cmake --build . --target install
    #- cd ../../..
test:
  stage: Test
  script:
    - echo "Running unit tests" 
    - ls
    #- source /opt/ros/foxy/setup.bash
    #- source install/setup.sh
    - ./install/tests/lib/tests/tests
    #./build/tests/tests

    #- /opt/ros/foxy/setup.bash
    #./install/tests/lib/tests/tests
    #- cd tests
    #- ./tests.cpp
    #- test -f "build/info.txt"
    # cd rosidl_typesupport_fastrtps_cpp && mkdir _build && cd _build 
    # - cmake .. && cmake --build . --target install
